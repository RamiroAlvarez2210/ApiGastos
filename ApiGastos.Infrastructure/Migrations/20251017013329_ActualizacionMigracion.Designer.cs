// <auto-generated />
using System;
using ApiGastos.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiGastos.Infrastructure.Migrations
{
    [DbContext(typeof(GastosDbContext))]
    [Migration("20251017013329_ActualizacionMigracion")]
    partial class ActualizacionMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiGastos.Domain.Entities.Ahorro", b =>
                {
                    b.Property<int>("ID_Ahorro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Ahorro"));

                    b.Property<int>("ID_Movimiento")
                        .HasColumnType("int");

                    b.Property<string>("Moneda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Plazo")
                        .HasColumnType("bit");

                    b.HasKey("ID_Ahorro");

                    b.ToTable("Ahorros");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.Cuota", b =>
                {
                    b.Property<int>("ID_Cuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Cuota"));

                    b.Property<int>("ID_Movimiento")
                        .HasColumnType("int");

                    b.Property<int>("ID_ProximaCuota")
                        .HasColumnType("int");

                    b.Property<string>("MesPagar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCuota")
                        .HasColumnType("int");

                    b.Property<bool>("Pagado")
                        .HasColumnType("bit");

                    b.Property<string>("Tarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Cuota");

                    b.ToTable("Cuotas");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.FechaCierre", b =>
                {
                    b.Property<DateTime>("Cierre")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Movimiento")
                        .HasColumnType("int");

                    b.Property<int>("ID_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Tarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioID_Usuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("Cierre");

                    b.HasIndex("UsuarioID_Usuario");

                    b.ToTable("FechasCierre");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.Gasto", b =>
                {
                    b.Property<int>("ID_Gasto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Gasto"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Movimiento")
                        .HasColumnType("int");

                    b.Property<int>("TiempoRecurrencia")
                        .HasColumnType("int");

                    b.Property<bool>("esRecurrente")
                        .HasColumnType("bit");

                    b.HasKey("ID_Gasto");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.Movimiento", b =>
                {
                    b.Property<int>("ID_Movimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Movimiento"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_MovimientoAnterior")
                        .HasColumnType("int");

                    b.Property<int>("ID_Usuario")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Movimiento");

                    b.HasIndex("ID_MovimientoAnterior");

                    b.HasIndex("ID_Usuario");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.Reintegro", b =>
                {
                    b.Property<int>("ID_Reintegro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Reintegro"));

                    b.Property<int>("ID_Movimiento")
                        .HasColumnType("int");

                    b.Property<string>("TipoOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Reintegro");

                    b.ToTable("Reintegros");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("ID_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Usuario"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Saldo")
                        .HasColumnType("int");

                    b.HasKey("ID_Usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.FechaCierre", b =>
                {
                    b.HasOne("ApiGastos.Domain.Entities.Usuario", null)
                        .WithMany("FechasCierre")
                        .HasForeignKey("UsuarioID_Usuario");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.Movimiento", b =>
                {
                    b.HasOne("ApiGastos.Domain.Entities.Movimiento", "movimiento")
                        .WithMany()
                        .HasForeignKey("ID_MovimientoAnterior");

                    b.HasOne("ApiGastos.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Movimientos")
                        .HasForeignKey("ID_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("movimiento");
                });

            modelBuilder.Entity("ApiGastos.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("FechasCierre");

                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
